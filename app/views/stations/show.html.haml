= content_for :js do
  = javascript_include_tag "https://www.google.com/jsapi"
  = javascript_tag do
    $(document).ready(function(){
    showMap(new google.maps.LatLng("#{@station.latitude}","#{@station.longitude}"));
    });

    / -# Pie chart
    / google.load('visualization', '1', {'packages':['corechart']});

    / google.setOnLoadCallback(drawChart);

    / function drawChart() {
    / var data = new google.visualization.DataTable();
    / data.addColumn('string', 'Topping');
    / data.addColumn('number', 'Slices');
    / data.addRows([
    / ['Likes', parseInt("#{@station.rates.like.size}")],
    / ['Unlikes', parseInt("#{@station.rates.unlike.size}")]
    / ]);

    / var options = {'title':'Rates'};

    / var chart = new google.visualization.PieChart(document.getElementById('chart_div'));
    / chart.draw(data, options);
    / }

    / -# Columns chart
    / google.load('visualization', '1', {packages: ['corechart', 'bar']});
    / google.setOnLoadCallback(drawColColors);

    / function drawColColors() {
    / var data = new google.visualization.DataTable();
    / data.addColumn('string', 'Time of Month');
    / data.addColumn('number', 'Views');
    / data.addColumn('number', 'Likes');
    / data.addColumn('number', 'Unlikes');
    / data.addColumn('number', 'Comments');

    / data.addRows([
    / [{v: "#{Date::MONTHNAMES[Date.today.prev_month.prev_month.month]}", f: "#{Date::MONTHNAMES[Date.today.prev_month.prev_month.month]}"}, parseInt("#{@station.impressionist_count(filter: :session_hash, start_date: get_day_prev_2_month(:first), end_date: get_day_prev_2_month(:last))}"), parseInt("#{@station.rates.prev_2_month.like.size}"), parseInt("#{@station.rates.prev_2_month.unlike.size}"), parseInt("#{@station.comments.prev_2_month.size}")],
    / [{v: "#{Date::MONTHNAMES[Date.today.prev_month.month]}", f: "#{Date::MONTHNAMES[Date.today.prev_month.month]}"}, parseInt("#{@station.impressionist_count(filter: :session_hash, start_date: get_day_prev_month(:first), end_date: get_day_prev_month(:last))}"), parseInt("#{@station.rates.prev_month.like.size}"), parseInt("#{@station.rates.prev_month.unlike.size}"), parseInt("#{@station.comments.prev_month.size}")],
    / [{v: "#{Date::MONTHNAMES[Date.today.month]}", f: "#{Date::MONTHNAMES[Date.today.month]}"}, parseInt("#{@station.impressionist_count(filter: :session_hash, start_date: get_day_this_month(:first), end_date: get_day_this_month(:last))}"), parseInt("#{@station.rates.this_month.like.size}"), parseInt("#{@station.rates.this_month.unlike.size}"), parseInt("#{@station.comments.this_month.size}")],
    / ]);

    / var options = {
    / title: 'Views and interactions on this page',
    / colors: ['#333', '#33ac71', '#fa9d8d', '#9575cd'],
    / hAxis: {
    / title: 'Months'
    / }
    / };

    / var columnsChart = new google.visualization.ColumnChart(document.getElementById('columns_chart_div'));
    / columnsChart.draw(data, options);
    / }

.station-show
  .header
    == #{@station.name} (#{@station.city})
    - if can? :manage, @station
      = link_to fa_icon('pencil', text: t('edit')), edit_station_path(@station), class: 'label secondary small'
      = link_to fa_icon('times', text: t('delete')), @station, method: :delete, class: 'label alert small', 'data-confirm': 'Are you sure?'
    - if signed_in?
      .right
        = link_to fa_icon('thumbs-up'), like_station_path, title: 'Like', class: "like #{'active' if @my_rate.like?}", remote: true
        = link_to fa_icon('thumbs-down'), unlike_station_path, title: 'Unlike', class: "unlike #{'active' if @my_rate.unlike?}", remote: true
  .body
    .row.collapse
      .large-6.columns
        #map-canvas
      .large-6.columns
        .content
          %h5
            Fuel
            = link_to fa_icon('plus', text: 'Add fuel'), new_station_price_path(@station), class: 'label small right', data: { :'reveal-id' => 'small-modal', :'reveal-ajax' => true } if can? :create, Price
          %hr
          - if @prices.any?
            %ul.large-block-grid-3.medium-block-grid-3.small-block-grid-2
              = render partial: 'price_card', collection: @prices.uniq_prices, as: :price, locals: {station: @station}
          - else
            .text-center No fuel yet
          / #columns_chart_div
          / #chart_div
    .row
      .large-3.columns
        %br
      .large-6.columns
        %h5 Comments
        %hr
        - if @station.comments.any?
          - @station.comments.each do |comment|
            .comment-content
              %b
                - if comment.user
                  = fa_icon('user', text: "#{comment.user_name}", title: "#{Rails.application.class.parent_name} user", class: 'primary', right: true)
                - else
                  = comment.name
                = " says:"
              = comment.content
              %small.secondary#date= l(comment.created_at, format: :short)
        - else
          .text-center No comments yet
        %p
          = simple_form_for([@station, @comment]) do |f|
            = f.input :name, required: !signed_in? unless signed_in?
            = f.input :content, label: 'Comment', as: :text, input_html: {rows: 4}
            = f.submit 'Save', class: 'button tiny right'
      .large-3.columns
        %br
